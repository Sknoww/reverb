name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: npm run build:win

      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        run: npm run build:mac
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Prepare macOS artifacts
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p artifacts
          cp release/*.dmg artifacts/ || true
          cp release/*.zip artifacts/ || true

      - name: Prepare Windows artifacts
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          mkdir -p artifacts
          cp release/*-setup.exe artifacts/ || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-artifacts
          path: artifacts/

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: List downloaded files
        run: find . -type f | sort

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *-artifacts/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
